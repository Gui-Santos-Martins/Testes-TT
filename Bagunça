//Código Imã
//A = Esquerda
//B = Meio
//C = Direita

#define perto 55 //cm
#define motorE OUT_A
#define motorD OUT_C
#define motorM OUT_B
#define sensorE SensorUS(IN_1)
#define sensorD SensorUS(IN_2)

task diagonal.1D(){
RotateMotor(OUT_AB,75,90);
}

task diagonal.2D(){
RotateMotor(OUT_C,75,-90);
}

task diagonal.D(){
//start digonal.1D;
//start digonal.2D;
 OnFwd(OUT_ABC,100);

task diagonal.1E(){
RotateMotor(OUT_AB,75,-90);
}

task diagonal.2E(){
RotateMotor(OUT_C,75,90);
}

task diagonal.E(){
//start digonal.1E;
//start digonal.2E;
 OnFwd(OUT_ABC,100);

task main() {

   SetSensorLowspeed(IN_1);
   SetSensorLowspeed(IN_2);
   Wait(3000);
   while (true) {
     if(sensorE < perto && sensorD < perto)
     {
      //start diagonal.D;
      if(sensorE < perto && sensorD < perto)
      {
        OnFwd(OUT_ABC,100);
        Wait(30);
       }
       else if (sensorE < perto && sensorD > perto)
      {
        OnFwd(OUT_AB,75);
        OnRev(OUT_C,75);
        Wait(30);
       }
       else
       {
        OnRev(OUT_AB,75);
        OnFwd(OUT_C,75);
        Wait(40);
       }
        Wait(30);
     }
     else if (sensorE < perto && sensorD > perto)
     //Girar p/ esquerda
    {
       //star diagonal.E;
        Wait(1000);
        if(sensorE < perto && sensorD < perto)
      {
        OnFwd(OUT_ABC,100);
        Wait(30);
       }
       else if (sensorE < perto && sensorD > perto)
      {
        OnFwd(OUT_AB,75);
        OnRev(OUT_C,75);
        Wait(30);
       }
       else
       {
        OnRev(OUT_AB,75);
        OnFwd(OUT_C,75);
        Wait(40);
       }
        Wait(30);

     }
     else
     //Girar p/ Direita
    {
         RotateMotor(OUT_AB,75,-90) &&  RotateMotor(OUT_C,75,90);
        OnRev(OUT_ABC,100);
        Wait(1000);
        if(sensorE < perto && sensorD < perto)
      {
        OnFwd(OUT_ABC,100);
        Wait(30);
       }
       else if (sensorE < perto && sensorD > perto)
      {
        OnRev(OUT_AB,75);
        OnFwd(OUT_C,75);
        Wait(30);
       }
       else
       {
        OnFwd(OUT_AB,75);
        OnRev(OUT_C,75);
        Wait(40);
       }
        Wait(30);
     }
}
}
